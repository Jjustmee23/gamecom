name: Deploy to VPS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        cd backend
        npm ci
        cd ../frontend
        npm ci
        
    - name: Build frontend
      run: |
        cd frontend
        npm run build
        
    - name: Build backend
      run: |
        cd backend
        npm run build
        
    - name: Deploy to VPS
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT }}
        script: |
          # Navigate to application directory
          cd /opt/gamecom
          
          # Pull latest changes
          git pull origin main
          
          # Stop current containers
          docker compose down
          
          # Remove old images to free space
          docker system prune -f
          
          # Build and start new containers
          docker compose up --build -d
          
          # Wait for containers to be healthy
          sleep 30
          
          # Check if containers are running
          docker compose ps
          
          # Run database migrations if needed
          docker compose exec -T backend npm run db:migrate || echo "No migrations needed"
          
          # Clear any old logs
          docker system prune -f
          
          echo "Deployment completed successfully!"
          
    - name: Health check
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT }}
        script: |
          cd /opt/gamecom
          
          # Check container status
          echo "=== Container Status ==="
          docker compose ps
          
          # Check if services are responding
          echo "=== Health Check ==="
          
          # Check backend health
          if curl -f http://localhost:3001/health; then
            echo "✅ Backend is healthy"
          else
            echo "❌ Backend health check failed"
            exit 1
          fi
          
          # Check frontend (basic connectivity)
          if curl -f http://localhost:3000; then
            echo "✅ Frontend is responding"
          else
            echo "❌ Frontend health check failed"
            exit 1
          fi
          
          echo "🎉 All services are healthy!"
          
    - name: Notify deployment status
      if: always()
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT }}
        script: |
          # Send notification (optional - you can add Discord webhook or email here)
          echo "Deployment completed at $(date)" >> /opt/gamecom/deployment.log
          
          # Keep only last 10 deployment logs
          tail -n 10 /opt/gamecom/deployment.log > /tmp/deployment.log
          mv /tmp/deployment.log /opt/gamecom/deployment.log 